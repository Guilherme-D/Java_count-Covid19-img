/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pid;

import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;

import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.core.MatOfFloat;
import org.opencv.core.MatOfInt;
import org.opencv.core.Point;
import org.opencv.core.Scalar;
import org.opencv.highgui.HighGui;
import static org.opencv.imgcodecs.Imgcodecs.imread;
import org.opencv.imgproc.Imgproc;

/**
 *
 * @author desenvolvedor
 */
public class Gui2 extends javax.swing.JFrame {

    String img_path = "";
    ImageIcon original = new ImageIcon();
    ImageIcon zoomImg = new ImageIcon();
    
    int contZoom = 0;
    int x_pressed = 0;
    int y_pressed = 0;
    int x_released = 0;
    int y_released = 0;
    /**
     * Creates new form Gui2
     */
    public Gui2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        minus_zoom = new javax.swing.JButton();
        scrollPane1 = new java.awt.ScrollPane();
        image_lbl = new javax.swing.JLabel();
        plus_zoom = new javax.swing.JButton();
        Zoom_lbl = new javax.swing.JLabel();
        histogram = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        minus_zoom.setText("+");
        minus_zoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minus_zoomActionPerformed(evt);
            }
        });

        scrollPane1.setPreferredSize(new java.awt.Dimension(512, 400));

        image_lbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        image_lbl.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        image_lbl.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                image_lblMouseDragged(evt);
            }
        });
        image_lbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                image_lblMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                image_lblMouseReleased(evt);
            }
        });
        scrollPane1.add(image_lbl);

        plus_zoom.setText("-");
        plus_zoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plus_zoomActionPerformed(evt);
            }
        });

        Zoom_lbl.setText("Zoom");

        histogram.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        histogram.setPreferredSize(new java.awt.Dimension(512, 400));

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(histogram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Zoom_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plus_zoom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minus_zoom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(histogram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minus_zoom)
                    .addComponent(plus_zoom)
                    .addComponent(Zoom_lbl))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        //FileNameExtensionFilter fnef = new FileNameExtensionFilter("png","png");
        //FileChooser.setFileFilter(fnef);

        //Open File Chooser with filters
        FileChooser.setFileFilter(
                new FileNameExtensionFilter(".png, .tiff, .jpg, .jpeg allowed",
                                            new String[] {"png","tiff","jpg", "jpeg"})
        );
        int value = FileChooser.showOpenDialog(this);
        
        //if file approved, show image and histogram
        if(value == JFileChooser.APPROVE_OPTION){
            
            //show image
            img_path = FileChooser.getSelectedFile().getAbsolutePath();
            zoomImg = original = Img_process.getIcon(img_path);
            image_lbl.setIcon(original);
        
            //show histogram
            System.out.println(img_path);
            BufferedImage histogram_img = Img_process.getHistogram(img_path, original);

            Image dimg = histogram_img.getScaledInstance(histogram.getWidth(), histogram.getHeight(),
            Image.SCALE_SMOOTH);

            histogram.setIcon(new ImageIcon(dimg));
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void minus_zoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minus_zoomActionPerformed
        // TODO add your handling code here:
        contZoom++;
        zoomImg = Img_process.zoomImg(original, true, contZoom);
        image_lbl.setIcon(zoomImg);
    }//GEN-LAST:event_minus_zoomActionPerformed

    
    private void plus_zoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plus_zoomActionPerformed
        // TODO add your handling code here:
        contZoom--;
        zoomImg = Img_process.zoomImg(original, false, contZoom);
        
        image_lbl.setIcon(zoomImg);
    }//GEN-LAST:event_plus_zoomActionPerformed

    private void image_lblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_image_lblMousePressed
        // TODO add your handling code here:
        //get point when mouse pressed
        x_pressed = evt.getX();
        y_pressed = evt.getY();
        System.out.println("PRESSED: "+x_pressed+","+y_pressed);
    }//GEN-LAST:event_image_lblMousePressed

    private void image_lblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_image_lblMouseReleased
        // TODO add your handling code here:
        //get point when mouse release
        x_released = evt.getX();
        y_released = evt.getY();
        System.out.println("released: "+x_released+","+y_released);
        
        Img_process.getSelectedImage(x_pressed,x_released,
                y_pressed,y_released, zoomImg);
    }//GEN-LAST:event_image_lblMouseReleased

    private void image_lblMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_image_lblMouseDragged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_image_lblMouseDragged

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JLabel Zoom_lbl;
    private javax.swing.JLabel histogram;
    private javax.swing.JLabel image_lbl;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JButton minus_zoom;
    private javax.swing.JButton plus_zoom;
    private java.awt.ScrollPane scrollPane1;
    // End of variables declaration//GEN-END:variables
}
